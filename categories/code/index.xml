<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Code on Lao&#39;s Blog</title>
    <link>https://laoooo.cn/categories/code/</link>
    <description>Recent content in Code on Lao&#39;s Blog</description>
    <image>
      <url>https://laoooo.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://laoooo.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 04 Mar 2021 20:34:13 +0000</lastBuildDate><atom:link href="https://laoooo.cn/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用Python快速批量生成文件夹</title>
      <link>https://laoooo.cn/%E5%88%A9%E7%94%A8python%E5%BF%AB%E9%80%9F%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Thu, 04 Mar 2021 20:34:13 +0000</pubDate>
      
      <guid>https://laoooo.cn/%E5%88%A9%E7%94%A8python%E5%BF%AB%E9%80%9F%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>灵感由来 由于疫情原因，学校要求开学时收集各班各学生的健康码以及通行证，并以学生姓名建立文件夹保存。于是产生了此需求（批量建立文件夹）。 思路 将</description>
      <content:encoded><![CDATA[<h1 id="灵感由来">灵感由来</h1>
<p>由于疫情原因，学校要求开学时收集各班各学生的健康码以及通行证，并以学生姓名建立文件夹保存。于是产生了此需求（批量建立文件夹）。</p>
<h1 id="思路">思路</h1>
<p>将花名册上所有名字写入一个数组，遍历该数组，并利用<code>os</code>模块生成对应文件夹。</p>
<h1 id="代码">代码</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1">#encoding:utf8</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="n">file_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="sa">r</span><span class="s2">&#34;/Users/doodlexu/Stu_Card/&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Stu_Name</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;张三&#34;</span><span class="p">,</span> <span class="s2">&#34;李四&#34;</span><span class="p">,</span> <span class="s2">&#34;王五&#34;</span><span class="p">,</span> <span class="s2">&#34;赵六&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">Stu_Name</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">file_name</span> <span class="o">=</span> <span class="n">file_path</span> <span class="o">+</span> <span class="s2">&#34;/&#34;</span> <span class="o">+</span> <span class="n">i</span>
</span></span><span class="line"><span class="cl">    <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">file_name</span><span class="p">)</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Java笔记</title>
      <link>https://laoooo.cn/java%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://laoooo.cn/java%E7%AC%94%E8%AE%B0/</guid>
      <description>Java笔记 数组 定义数组 dataType[] arrayRefVar = new dataType[]; // 首选的方法 dataType arrayRefVar[] = new dataType[]; // 效果相同，但不是首选方法 获得行数和列数 行数 int [][] array = new int [2][3]; int row = array.lengh; //行数 int col = array[0].lengh; /</description>
      <content:encoded><![CDATA[<h1 id="java笔记">Java笔记</h1>
<h2 id="数组">数组</h2>
<h3 id="定义数组">定义数组</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">dataType</span><span class="o">[]</span> <span class="n">arrayRefVar</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dataType</span><span class="o">[];</span>   <span class="c1">// 首选的方法
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">dataType</span> <span class="n">arrayRefVar</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">dataType</span><span class="o">[];</span>   <span class="c1">// 效果相同，但不是首选方法
</span></span></span></code></pre></div><h3 id="获得行数和列数">获得行数和列数</h3>
<h4 id="行数">行数</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span> <span class="o">[][]</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span> <span class="o">[</span><span class="n">2</span><span class="o">][</span><span class="n">3</span><span class="o">];</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="n">array</span><span class="o">.</span><span class="na">lengh</span><span class="o">;</span>      <span class="c1">//行数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="n">array</span><span class="o">[</span><span class="n">0</span><span class="o">].</span><span class="na">lengh</span><span class="o">;</span>   <span class="c1">//列数
</span></span></span></code></pre></div><h4 id="快速输出数组元素">快速输出数组元素</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span> <span class="o">[][]</span> <span class="n">array</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span> <span class="o">[</span><span class="n">2</span><span class="o">][</span><span class="n">3</span><span class="o">];</span>
</span></span><span class="line"><span class="cl"><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">deepToString</span><span class="o">(</span><span class="n">array</span><span class="o">));</span>  <span class="c1">//打印该数组的每一个元素
</span></span></span></code></pre></div><h2 id="字符串">字符串</h2>
<h3 id="取子串">取子串</h3>
<h4 id="从指定位置截取到末尾">从指定位置截取到末尾</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="s">&#34;abcdefg&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">String</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">3</span><span class="o">);</span> <span class="c1">//&#34;defg&#34;
</span></span></span></code></pre></div><h4 id="指定位置截取子串">指定位置截取子串</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="s">&#34;abcdefg&#34;</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">String</span> <span class="n">sub</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">2</span><span class="o">,</span><span class="n">4</span><span class="o">),</span> <span class="c1">//&#34;cde&#34;
</span></span></span></code></pre></div><h2 id="输入与输出">输入与输出</h2>
<h3 id="bufferedreader-和-scanner-的用法和区别">BufferedReader 和 Scanner 的用法和区别</h3>
<h4 id="bufferedreader">BufferedReader</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>  <span class="c1">//创建一个BufferedReader对象
</span></span></span></code></pre></div><p>BufferedReader 对象创建后，我们便可以使用 **read() **方法从控制台读取一个字符，或者用 **readLine() **方法读取一个字符串。</p>
<p>例如：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">char</span> <span class="n">c</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">c</span> <span class="o">=</span> <span class="o">(</span><span class="kt">char</span><span class="o">)</span> <span class="n">br</span><span class="o">.</span><span class="na">read</span><span class="o">();</span>  <span class="c1">//读取字符
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">String</span> <span class="n">str</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"><span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readline</span><span class="o">();</span>   <span class="c1">//读取字符串
</span></span></span></code></pre></div><h4 id="scanner">Scanner</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ScannerDemo</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">      	<span class="c1">// next方式接收字符串
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;next方式接收：&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 判断是否还有输入
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="o">(</span><span class="n">scan</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="n">scan</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;输入的数据为：&#34;</span> <span class="o">+</span> <span class="n">str1</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">        <span class="c1">// nextLine方式接收字符串
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;nextLine方式接收：&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 判断是否还有输入
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="o">(</span><span class="n">scan</span><span class="o">.</span><span class="na">hasNextLine</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">String</span> <span class="n">str2</span> <span class="o">=</span> <span class="n">scan</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;输入的数据为：&#34;</span> <span class="o">+</span> <span class="n">str2</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">scan</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h5 id="next-与-nextline-区别">next() 与 nextLine() 区别</h5>
<p><strong>next():</strong></p>
<ul>
<li>1、一定要读取到有效字符后才可以结束输入。</li>
<li>2、对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li>
<li>3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li>
<li>next() 不能得到带有空格的字符串。</li>
</ul>
<p><strong>nextLine() ：</strong></p>
<ul>
<li>1、以Enter为结束符,也就是说 nextLine()方法返回的是输入回车之前的所有字符。</li>
<li>2、可以获得空白。</li>
</ul>
<p>如果要输入 int 或 float 类型的数据，在 Scanner 类中也有支持，但是在输入之前最好先使用 hasNextXxx() 方法进行验证，再使用 nextXxx() 来读取：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ScannerDemo</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 从键盘接收数据
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">        <span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="n">0</span><span class="o">.</span><span class="na">0f</span><span class="o">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;输入整数：&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">scan</span><span class="o">.</span><span class="na">hasNextInt</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 判断输入的是否是整数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">i</span> <span class="o">=</span> <span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 接收整数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;整数数据：&#34;</span> <span class="o">+</span> <span class="n">i</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 输入错误的信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;输入的不是整数！&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">&#34;输入小数：&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="o">(</span><span class="n">scan</span><span class="o">.</span><span class="na">hasNextFloat</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 判断输入的是否是小数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">f</span> <span class="o">=</span> <span class="n">scan</span><span class="o">.</span><span class="na">nextFloat</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 接收小数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;小数数据：&#34;</span> <span class="o">+</span> <span class="n">f</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 输入错误的信息
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;输入的不是小数！&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">scan</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></div><h2 id="继承">继承</h2>
<h3 id="super方法">super方法</h3>
<blockquote>
<p>super是指向父类的引用，如果构造方法没有显示地调用父类的构造方法，那么编译器会自动为它加上一个默认的super()方法调用。如果父类由没有默认的无参构造方法，编译器就会报错，super()语句必须是构造方法的第一个子句。</p>
</blockquote>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
